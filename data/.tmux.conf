# My config file for tmux

# which terminal to advertise as
#set -g default-terminal 'screen-256color' # screen, widely supported
#set -g default-terminal 'tmux-256color' # supports things like italics
set -g default-terminal "$TERM" # use the original term variable. preserves italics/color support

# which terminal to advertise as, for sessions without display
# setting to xterm seems to work even in tty sessions, for better color support
#if '[ -z "$DISPLAY" ]' 'set -g default-terminal "xterm-256color"'

# enable mouse support
set -g mouse on # since tmux 2.1
# for older tmux
#set -g mouse-select-pane on
#set -g mouse-select-window on
#set-window-option -g mode-mouse on

# scrollback buffer n lines
set -g history-limit 50000

# focus events enabled for terminals that support them
set -g focus-events on

# update these variables when creating a new session or attaching a existing session
# TODO test this out: this supports copy-paste from remote sessions
#set -g update-environment 'COLORTERM DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION TERM WINDOWID XAUTHORITY'

# timeouts #####################################################################

# Set the esc/alt disambiguation timeout to 50ms. The default is half a second,
# which makes vim kind of painful
#set -sg escape-time 0
set -sg escape-time 50

# display statusbar messages for a longer time
set -g display-time 4000

# windows #####################################################################

# enable wm window titles
set -g set-titles on

# start window/pane indexing at one instead of zero
set -g base-index 1
set-window-option -g pane-base-index 1

# listen for activity on all windows
set-window-option -g monitor-activity on

# constrain window size to the size of the smallest client displaying the window
set-window-option -g aggressive-resize on

# theme ########################################################################

# move status bar to the top
set -g status-position top

# the conf files here are generated via vim plugin tmuxline:
# for more details, see https://github.com/edkolev/tmuxline.vim
#
# when we have display, apply only the minimal config (shows only the window
# info since things like time will already be available from panels)
#
# `:TmuxlineSnapshot powerline powerline`
if '[ -z "$DISPLAY" ]' 'source ~/.tmux/tmuxline.full.conf'
# `:TmuxlineSnapshot powerline minimal`
if '[ -n "$DISPLAY" ]' 'source ~/.tmux/tmuxline.minimal.conf'

# not dependent on tmuxline
#source ~/.tmux/tmuxline.simple.conf

# copy mode selection
set-window-option -g mode-style fg=white,bg=black

# visually mark windows when a command is done
set-window-option -g window-status-activity-style blink

# key bindings ################################################################

# rxvt-tabbed like shortcuts
bind -n S-down new-window -c '#{pane_current_path}'
bind -n S-right next
bind -n S-left prev
bind -n S-up last-window

# set the prefix to C-s (similar to screen)
unbind C-b
set -g prefix C-s
bind C-s send-prefix

# prefix, followed by Ctrl-d detaches the session
bind C-d detach

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# mouse drag to re-order windows
bind-key -n MouseDrag1Status swap-window -t=

# mouse double click on the window list to open a new window
bind-key -n DoubleClick1Status new-window

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# copy mode ###################################################################

# helper aliases for interacting with the system clipboard
copy_to_clipboard="xsel -i -p && xsel -o -p | xsel -i -b"
paste_from_clipboard="xsel -o | tmux load-buffer - ; tmux paste-buffer"

# necessary for the xsel copy to work properly (without spewing characters on screen)
set -g set-clipboard off

# switch to vi-style controls for copy mode
set-window-option -g mode-keys vi

# enter copy mode on prefix-escape. mouse scroll also does this automatically.
bind Escape copy-mode

# when scrolling with mouse wheel, reduce number of scrolled rows per tick to "3" (default is 5)
# commented out since this is overidden by tmux-better-mouse-mode (provides the same functionality,
# along with other goodies)
#bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 3 scroll-up
#bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 3 scroll-down

# select pane with left mouse-click, and also clear selection (useful when scrolling text for copy)
bind -T copy-mode-vi MouseDown1Pane select-pane \; send-keys -X clear-selection

# text selection with keyboard (v to start and r for rectangular select)
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# copy selected text to system clipboard
# (with y, or automatically if the selection was through mouse drag)
bind -T copy-mode-vi y send-keys -X copy-pipe "$copy_to_clipboard"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "$copy_to_clipboard"

# paste from system clipboard on prefix-p, or on mouse middle-click
# by default, p is bound to previous window
unbind p
bind p run "$paste_from_clipboard"
bind -n MouseDown2Pane run "$paste_from_clipboard"

# mouse double click selects and copies a word (both in copy mode and outside of it)
bind -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "$copy_to_clipboard"
bind -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "$copy_to_clipboard"

# mouse triple click selects and copies a line (both in copy mode and outside of it)
bind -T copy-mode-vi TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe "$copy_to_clipboard"
bind -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe "$copy_to_clipboard"

# tmux plugin manager #########################################################

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# emulate scrolling for "full-screen", alternate buffer programs, such as less,
# man, or vi that don't themselves already support mouse interactions
# depends on tmux-better-mouse-mode plugin
set -g @emulate-scroll-for-no-mouse-alternate-buffer on

# restore vim sessions
# depends on tmux-resurrect plugin, as well as sessions being saved from vim
set -g @resurrect-strategy-vim 'session'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
